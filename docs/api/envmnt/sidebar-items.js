initSidebarItems({"fn":[["evaluate_and_load_file","Parses the provided env file and loads all environment variables."],["evaluate_and_set_all","Sets all the provided env key/value pairs."],["exists","Returns true environment variable is defined."],["get_or","Returns the environment variable value or if is not defined, the default value will be returned."],["get_or_panic","Returns the environment variable value. If the variable is not defined, this function will panic."],["get_remove","Removes the provided environment variable and returns its previous value (if any)."],["get_set","Sets the environment variable value and returns the previous value."],["is","Returns false if environment variable value if falsy. The value is falsy if it is one of the following: * Empty string * \"false\" (case insensitive) * \"no\" (case insensitive) * \"0\" Any other value is returned as true. This is same as calling is_or(\"varname\", false)"],["is_all_exists","Returns true if all of environment variables are defined."],["is_any_exists","Returns true if any of environment variables is defined."],["is_equal","Returns true if the provided environment variable is defined and equals the provided value."],["is_or","Returns false if environment variable value if falsy. The value is falsy if it is one of the following: * Empty string * \"false\" (case insensitive) * \"no\" (case insensitive) * \"0\" Any other value is returned as true."],["load_file","Parses the provided env file and loads all environment variables."],["parse_file","Parses the provided env file and returns its content as a map of key/value."],["remove","Removes the provided environment variable."],["set","Sets the environment variable value."],["set_all","Sets all the provided env key/value pairs."],["set_bool","Sets the environment variable with a true/false value as string."],["set_optional","Sets the environment variable if the provided option contains a value."],["vars","Returns all environment variables as a vector."]]});